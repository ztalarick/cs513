if(x == 4){
factor(data[[4]])
}
print(summary(data[[column]]))
}
x <- c(2, 3, 4, 5, 6, 7)
for (column in x) {
if(column == 4){
factor(data[[4]])
}
print(summary(data[[column]]))
}
x <- c(2, 3, 4, 5, 6, 7)
for (column in x) {
print(summary(data[[column]]))
}
rm(list=ls())
setwd("/home/zach/Documents/Junior/CS513/midterm")
data <- read.csv("COVID19_v3.csv")
x <- c(2, 3, 4, 5, 6, 7)
data[[4]] = factor(data[[4]])
for (column in x) {
print(summary(data[[column]]))
}
rm(list=ls())
setwd("/home/zach/Documents/Junior/CS513/midterm")
data <- read.csv("COVID19_v3.csv")
x <- c(2, 3, 4, 5, 6, 7)
data[[4]] = factor(data[[4]])
for (column in x) {
print(summary(data[[column]]))
}
freq(data[[4]], data[[7]])
Freq(data[[4]], data[[7]])
#frequency table for marital vs infected
frequency(data[[4]], data[[7]])
#frequency table for marital vs infected
table(data[[4]], data[[7]])
rm(list=ls())
setwd("/home/zach/Documents/Junior/CS513/midterm")
data <- read.csv("COVID19_v3.csv")
x <- c(2, 3, 4, 5, 6, 7)
data[[4]] = factor(data[[4]])
#get summary for each column
for (column in x) {
print(summary(data[[column]]))
}
#frequency table for marital vs infected
table(data[[4]], data[[7]])
#scatter plot age vs marital
plot(data[[2]], data[[4]])
#scatter plot age vs months in hospital
plot(data[[2]], data[[6]])
#scatter plot marital vs months in hospital
plot(data[[4]], data[[6]])
#scatter plot marital vs months in hospital
plot(data[[6]], data[[4]])
4
#scatter plot marital vs months in hospital
plot(data[[4]], data[[6]])
boxplot(data[2], data[4], data[6])
boxplot(data[2], data[4])
boxplot(data[2], data[6])
boxplot(data[4], data[6])
rm(list=ls())
setwd("/home/zach/Documents/Junior/CS513/midterm")
data <- read.csv("COVID19_v3.csv")
x <- c(2, 3, 4, 5, 6, 7)
data[[4]] = factor(data[[4]])
#get summary for each column
for (column in x) {
print(summary(data[[column]]))
}
#frequency table for marital vs infected
table(data[[4]], data[[7]])
#scatter plot age vs marital
plot(data[[2]], data[[4]])
#scatter plot age vs months in hospital
plot(data[[2]], data[[6]])
#scatter plot marital vs months in hospital
plot(data[[4]], data[[6]])
boxplot(data[2], data[4])
boxplot(data[2], data[6])
boxplot(data[4], data[6])
rm(list=ls())
setwd("/home/zach/Documents/Junior/CS513/midterm")
data <- read.csv("COVID19_v3.csv")
x <- c(2, 3, 4, 5, 6, 7)
data[[4]] = factor(data[[4]])
#get summary for each column
for (column in x) {
print(summary(data[[column]]))
}
#frequency table for marital vs infected
table(data[[4]], data[[7]])
#scatter plot age vs marital
plot(data[[2]], data[[4]])
#scatter plot age vs months in hospital
plot(data[[2]], data[[6]])
#scatter plot marital vs months in hospital
plot(data[[4]], data[[6]])
boxplot(data[2])
boxplot(data[4])
boxplot(data[6])
#age
boxplot(data[[2]])
#marital status
boxplot(data[[4]])
#
boxplot(data[[6]])
#marital status
boxplot(data[,4])
rm(list=ls())
setwd("/home/zach/Documents/Junior/CS513/midterm")
data <- read.csv("COVID19_v3.csv")
x <- c(2, 3, 4, 5, 6, 7)
#get summary for each column
for (column in x) {
print(summary(data[[column]]))
}
#frequency table for marital vs infected
table(data[[4]], data[[7]])
#scatter plot age vs marital
plot(data[[2]], data[[4]])
#scatter plot age vs months in hospital
plot(data[[2]], data[[6]])
#scatter plot marital vs months in hospital
plot(data[[4]], data[[6]])
#age
boxplot(data[[2]])
#marital status
boxplot(data[[4]])
#months at hospital
boxplot(data[[6]])
rm(list=ls())
setwd("/home/zach/Documents/Junior/CS513/midterm")
group = function(x){
if(x<35){
x = 0
}
if(x>= 35 & x<=50){
x = 1
}
else{
x = 2
}
return(x)
}
data = read.csv("COVID19_v3.csv")
# Discretize Months At Hospital
data["Disc_MAH"] = as.numeric(data[,6] < 6) # 1 if the stay less than 6, 0 if the stay greater than 6
#discretize age  >35 = 0/35-50 = 1/<51 = 2
data["Disc_Age"] = rollapply(data[,2],1, function(x)group(x))
finalData = data[,c(3,4,5,8,9,7)]
data[,c(2,5,6)] = factor(data[,c(2,5,6)] )
install.packages("e1071")
install.packages("caret")
install.packages("class")
library(e1071)
library(class)
library(caret)
library(zoo)
library(rpart)
rm(list=ls())
setwd("/home/zach/Documents/Junior/CS513/midterm")
group = function(x){
if(x<35){
x = 0
}
if(x>= 35 & x<=50){
x = 1
}
else{
x = 2
}
return(x)
}
data = read.csv("COVID19_v3.csv")
# Discretize Months At Hospital
data["Disc_MAH"] = as.numeric(data[,6] < 6) # 1 if the stay less than 6, 0 if the stay greater than 6
#discretize age  >35 = 0/35-50 = 1/<51 = 2
data["Disc_Age"] = rollapply(data[,2],1, function(x)group(x))
rm(list=ls())
setwd("/home/zach/Documents/Junior/CS513/midterm")
group = function(x){
if(x<35){
x = "young"
}
if(x>= 35 & x<=50){
x = "mid"
}
else{
x = "old"
}
return(x)
}
data = read.csv("COVID19_v3.csv")
# Discretize Months At Hospital
data["Disc_MAH"] = as.numeric(data[,6] < 6) # 1 if the stay less than 6, 0 if the stay greater than 6
#discretize age  >35 = 0/35-50 = 1/<51 = 2
data["Disc_Age"] = rollapply(data[,2],1, function(x)group(x))
finalData = data[,c(3,4,5,8,9,7)]
data[,c(2,5,6)] = factor(data[,c(2,5,6)] )
finalData = data.frame(finalData)
finalData[,5] = factor(finalData[,5])
sapply(finalData, class)
#split data into training and test data sets
indxTrain <- createDataPartition(y = finalData$Infected,p = 0.70,list = FALSE)
training <- finalData[indxTrain,]
testing <- finalData[-indxTrain,]
x_train = training[,1:5]
y_train = training$Infected
model = train(x_train,y_train,'nb',trControl=trainControl(method='cv',number=10))
Predict <- predict(model,newdata = testing )
confusionMatrix(Predict, testing$Infected)
X <- varImp(model)
plot(X)
group = function(x){
if(x<35){
x = 0
}
if(x>= 35 && x<=50){
x = 1
}
else{
x = 2
}
return(x)
}
data = read.csv("COVID19_v3.csv")
# Discretize Months At Hospital
data["Disc_MAH"] = as.numeric(data[,6] < 6) # 1 if the stay less than 6, 0 if the stay greater than 6
#discretize age  >35 = 0/35-50 = 1/<51 = 2
data["Disc_Age"] = rollapply(data[,2],1, function(x)group(x))
group = function(x){
if(x<35){
x = "young"
}
if(x>= 35 & x<=50){
x = "mid"
}
else{
x = "old"
}
return(x)
}
data = read.csv("COVID19_v3.csv")
data[,4] = factor(data[,4])
data[,7] = factor(data[,7])
# Summarizing each column (e.g. min, max, mean )
summary(data["Age"])
summary(data["Exposure"])
summary(data["MaritalStatus"])
summary(data["Cases"])
summary(data["MonthsAtHospital"])
summary(data["Infected"])
# II.	  Identifying missing values
is.na(data[,2])
# III.	Displaying the frequency table of "Infected" vs. "MaritalStatus"
table(data[,7], data[,4])
# IV.	  Displaying the scatter plot of "Age", "MaritalStatus" and "MonthAtHospital", one pair at a time
plot(data[,2], data[,4])
plot(data[,2], data[,6])
plot(data[,6], data[,4])
# V.	  Show box plots for columns:  "Age", "MaritalStatus" and "MonthAtHospital"
boxplot(data[,2])
# boxplot(data[,4])
boxplot(data[,6])
# Question Five (10 Points) #################################################################################################
# Load the CANVAS "COVID19_v3.CSV" dataset into R/Python.
data = read.csv("COVID19_v3.csv")
# Remove the missing values.
data = na.omit(data)
# Discretize the "MonthAtHospital" into "less than 6 months" and "6 or more months".
data["MAH"] = as.numeric(data[,6] < 6) # 1 if the stay less than 6, 1 0 if the stay greater than 6
# Also discretize the age into "less than 35", "35 to 50" and "51 or over".
data["AGEDISC"] = rollapply(data[,2],1, function(x)group(x))
finalData = data[,c(3,4,5,8,9,7)]
data[,c(2,5,6)] = factor(data[,c(2,5,6)] )
finalData = data.frame(finalData)
finalData[,5] = factor(finalData[,5])
sapply(finalData, class)
#split data into training and test data sets
indxTrain <- createDataPartition(y = finalData$Infected,p = 0.70,list = FALSE)
training <- finalData[indxTrain,]
testing <- finalData[-indxTrain,]
x_train = training[,1:5]
y_train = training$Infected
model = train(x_train,y_train,'nb',trControl=trainControl(method='cv',number=10))
Predict <- predict(model,newdata = testing )
confusionMatrix(Predict, testing$Infected)
X <- varImp(model)
plot(X)
data = read.csv("COVID19_v3.csv")
data = na.omit(data)
# Discretize the "MonthAtHospital" into "less than 6 months" and "6 or more months".
data["MAH"] = as.numeric(data[,6] < 6) # 1 if the stay less than 6, 1 0 if the stay greater than 6
# Also discretize the age into "less than 35", "35 to 50" and "51 or over".
data["AGEDISC"] = rollapply(data[,2],1, function(x)group(x))
finalData = data[,c(3,4,5,8,9,7)]
data[,c(2,5,6)] = factor(data[,c(2,5,6)] )
finalData = data.frame(finalData)
finalData[,5] = factor(finalData[,5])
sapply(finalData, class)
#split data into training and test data sets
indxTrain <- createDataPartition(y = finalData$Infected,p = 0.70,list = FALSE)
training <- finalData[indxTrain,]
testing <- finalData[-indxTrain,]
x_train = training[,1:5]
y_train = training$Infected
# grow tree
fit = rpart(y_train~ ., data = training, method="class",parms = list(split = "information"))
t_pred = predict(fit, testing, type="class")
t = testing["Infected"]
confMat <- table(testing$Infected, t_pred)
accuracy <- sum(diag(confMat))/sum(confMat)
accuracy
data = read.csv("COVID19_v3.csv")
data = na.omit(data)
finalData = data[,c(2,3,5,6,7)]
ind <- createDataPartition(finalData$Infected, p=0.70, list=FALSE)
inf_train <- finalData[ind,-5]
inf_test <- finalData[-ind,-5]
c1 <- finalData[ind,5]
cTest = finalData[-ind,5]
knn.3 = knn(inf_train , inf_test, c1, k=5, prob=TRUE)
confusionMatrix(table(knn.3 , cTest))
###########################################################################################################################
###########################################################################################################################
###########################################################################################################################
###########################################################################################################################
###########################################################################################################################
###########################################################################################################################
###########################################################################################################################
###########################################################################################################################
###########################################################################################################################
###########################################################################################################################
library(e1071)
library(class)
library(caret)
library(zoo)
library(rpart)
rm(list=ls())
setwd("/home/zach/Documents/Junior/CS513/midterm")
data = read.csv("COVID19_v3.csv")
data = na.omit(data)
finalData = data[,c(2,3,5,6,7)]
ind <- createDataPartition(finalData$Infected, p=0.70, list=FALSE)
inf_train <- finalData[ind,-5]
inf_test <- finalData[-ind,-5]
c1 <- finalData[ind,5]
cTest = finalData[-ind,5]
knn.3 = knn(inf_train , inf_test, c1, k=5, prob=TRUE)
confusionMatrix(table(knn.3 , cTest))
data = read.csv("COVID19_v3.csv")
finalData = data[,c(2,3,5,6,7)]
ind <- createDataPartition(finalData$Infected, p=0.70, list=FALSE)
inf_train <- finalData[ind,-5]
inf_test <- finalData[-ind,-5]
c1 <- finalData[ind,5]
cTest = finalData[-ind,5]
knn.3 = knn(inf_train , inf_test, c1, k=5, prob=TRUE)
confusionMatrix(table(knn.3 , cTest))
rm(list=ls())
setwd("/home/zach/Documents/Junior/CS513/midterm")
group = function(x){
if(x<35){
x = 0
}
if(x>= 35 && x<=50){
x = 1
}
else{
x = 2
}
return(x)
}
data = read.csv("COVID19_v3.csv")
# Discretize Months At Hospital
data["Disc_MAH"] = as.numeric(data[,6] < 6) # 1 if the stay less than 6, 0 if the stay greater than 6
#discretize age  >35 = 0/35-50 = 1/<51 = 2
data["Disc_Age"] = rollapply(data[,2],1, function(x)group(x))
data = na.omit(data)
#model
finalData = data[,c(3,4,5,8,9,7)]
data = read.csv("COVID19_v3.csv")
data = na.omit(data)
# Discretize Months At Hospital
data["Disc_MAH"] = as.numeric(data[,6] < 6) # 1 if the stay less than 6, 0 if the stay greater than 6
#discretize age  >35 = 0/35-50 = 1/<51 = 2
data["Disc_Age"] = rollapply(data[,2],1, function(x)group(x))
#model
finalData = data[,c(3,4,5,8,9,7)]
data[,c(2,5,6)] = factor(data[,c(2,5,6)] )
finalData = data.frame(finalData)
finalData[,5] = factor(finalData[,5])
sapply(finalData, class)
#split data into training and test data sets
indxTrain <- createDataPartition(y = finalData$Infected,p = 0.70,list = FALSE)
training <- finalData[indxTrain,]
testing <- finalData[-indxTrain,]
x_train = training[,1:5]
y_train = training$Infected
model = train(x_train,y_train,'nb',trControl=trainControl(method='cv',number=10))
Predict <- predict(model,newdata = testing )
confusionMatrix(Predict, testing$Infected)
X <- varImp(model)
plot(X)
rm(list=ls())
setwd("/home/zach/Documents/Junior/CS513/midterm")
group = function(x){
if(x<35){
x = 0
}
if(x>= 35 && x<=50){
x = 1
}
else{
x = 2
}
return(x)
}
data = read.csv("COVID19_v3.csv")
data = na.omit(data)
#discretize Months At Hospital
data["Disc_MAH"] = as.numeric(data[,6] < 6) # 1 if the stay less than 6, 0 if the stay greater than 6
#discretize age  >35 = 0/35-50 = 1/<51 = 2
data["Disc_Age"] = rollapply(data[,2],1, function(x)group(x))
#picks the correct columns for the descretized data
good_data = data[,c(3,4,5,8,9,7)]
data[,c(2,5,6)] = factor(data[,c(2,5,6)] )
good_data = data.frame(good_data)
good_data[,5] = factor(good_data[,5])
sapply(good_data, class)
#split data into training and test data sets at .7
training_index <- createDataPartition(y = good_data$Infected,p = 0.70,list = FALSE)
training <- good_data[training_index,]
testing <- good_data[-training_index,]
x_train = training[,1:5]
y_train = training$Infected
# grow tree
fit = rpart(y_train~ ., data = training, method="class",parms = list(split = "information"))
t_pred = predict(fit, testing, type="class")
t = testing["Infected"]
confMat <- table(testing$Infected, t_pred)
accuracy <- sum(diag(confMat))/sum(confMat)
accuracy
rm(list=ls())
setwd("/home/zach/Documents/Junior/CS513/midterm")
group = function(x){
if(x<35){
x = 0
}
if(x>= 35 && x<=50){
x = 1
}
else{
x = 2
}
return(x)
}
data = read.csv("COVID19_v3.csv")
data = na.omit(data)
#discretize Months At Hospital
data["Disc_MAH"] = as.numeric(data[,6] < 6) # 1 if the stay less than 6, 0 if the stay greater than 6
#discretize age  >35 = 0/35-50 = 1/<51 = 2
data["Disc_Age"] = rollapply(data[,2],1, function(x)group(x))
#picks the correct columns for the descretized data
good_data = data[,c(3,4,5,8,9,7)]
#data[,c(2,5,6)] = factor(data[,c(2,5,6)] )
good_data = data.frame(good_data)
good_data[,5] = factor(good_data[,5])
sapply(good_data, class)
#split data into training and test data sets at .7
training_index <- createDataPartition(y = good_data$Infected,p = 0.70,list = FALSE)
training <- good_data[training_index,]
testing <- good_data[-training_index,]
x_train = training[,1:5]
y_train = training$Infected
# grow tree
fit = rpart(y_train~ ., data = training, method="class",parms = list(split = "information"))
t_pred = predict(fit, testing, type="class")
t = testing["Infected"]
confMat <- table(testing$Infected, t_pred)
accuracy <- sum(diag(confMat))/sum(confMat)
accuracy
rm(list=ls())
setwd("/home/zach/Documents/Junior/CS513/midterm")
data = read.csv("COVID19_v3.csv")
data = na.omit(data)
new_data = data[,c(2,3,5,6,7)]
#split into 70% training 30% testing
ind <- createDataPartition(new_data$Infected, p=0.70, list=FALSE)
inf_train <- new_data[ind,-5]
inf_test <- new_data[-ind,-5]
c1 <- new_data[ind,5]
cTest = new_data[-ind,5]
knn.3 = knn(inf_train , inf_test, c1, k=5, prob=TRUE)
confusionMatrix(table(knn.3 , cTest))
rm(list=ls())
setwd("/home/zach/Documents/Junior/CS513/midterm")
data = read.csv("COVID19_v3.csv")
data = na.omit(data)
new_data = data[,c(2,3,5,6,7)]
#split into 70% training 30% testing
ind <- createDataPartition(new_data$Infected, p=0.70, list=FALSE)
inf_train <- new_data[ind,-5]
inf_test <- new_data[-ind,-5]
c <- new_data[ind,5]
c_test = new_data[-ind,5]
model = knn(inf_train , inf_test, c, k=5, prob=TRUE)
confusionMatrix(table(model , c_test))
